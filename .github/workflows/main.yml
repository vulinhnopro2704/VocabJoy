name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js environment for Backend
      working-directory: ./Backend
      run: |
        sudo apt-get update && sudo apt-get install -y curl
        sudo curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
        sudo apt-get install -y nodejs -y

    - name: Install dependencies and build Backend
      working-directory: ./Backend
      run: |
        npm install
        npm run build

    - name: Build Docker image for Backend
      working-directory: ./Backend
      run: |
        docker build -t node-backend:latest .

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: |
        docker tag node-backend:latest ${{ secrets.DOCKER_USERNAME }}/node-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/node-backend:latest

    - name: Set up Node.js environment for Mobile
      working-directory: ./Mobile
      run: |
        sudo apt-get update && sudo apt-get install -y curl
        sudo curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
        sudo apt-get install -y nodejs

    - name: Install dependencies and build Mobile
      working-directory: ./Mobile
      run: |
        npm install
        npm run lint

    - name: Deploy to Server via SSH
      env:
        IP_SERVER: ${{ secrets.IP_SERVER }}
        SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
        USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
      run: |
        # Tạo file script deploy
        echo "Pulling new image and restarting container..." > deploy.sh
        echo "docker pull $DOCKER_USERNAME/node-backend:latest" >> deploy.sh
        echo "docker ps -q --filter ancestor=$DOCKER_USERNAME/node-backend:latest | xargs -r docker stop" >> deploy.sh
        echo "docker ps -aq --filter ancestor=$DOCKER_USERNAME/node-backend:latest | xargs -r docker rm" >> deploy.sh
        echo "docker run -d -p 3000:3000 --name node-backend $DOCKER_USERNAME/node-backend:latest" >> deploy.sh
    
        # Copy script lên server
        sshpass -p "$USER_PASSWORD" scp -o StrictHostKeyChecking=no -P $SSH_PORT deploy.sh $SERVER_USERNAME@$IP_SERVER:/tmp/deploy.sh
    
        # SSH vào server và thực thi script
        sshpass -p "$USER_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SERVER_USERNAME@$IP_SERVER << EOF
          chmod +x /tmp/deploy.sh
          /tmp/deploy.sh
          rm -f /tmp/deploy.sh
        EOF
